----- USANDO O DOCKER COMO CLIENTE ---------

SUBIR CONTAINERS
docker-compose up -d 

ENTRAR NO CONTAINER
docker exec -u 1000 -it dev_php bash |(em que dev_php é o nome do container, e tbm poderia se seu ID)

PARAR CONTAINER (sempre ao final do dia de trabalho, para n dar conflito de network)
docker-compose down 

--------- FIM USANDO DOCKER COMO CLIENTE ----------


---- ACESSANDO O BANCO MYSQL NO TERMINAL ---
mysql -u user -p

Para usar a base de dados:
use nome_do_banco; 

Para exibir as tabelas da base de dados:
show tables; 

Para detalhar a migration:
describe migrations;

Para detalhar uma tabela:
describe nome_da_table;

---- FIM ACESSANDO BANCO MYSQL NO TERMINAL ---


----------- MIGRATIONS ------------

Criar migration
php artisan make:migration nome_migration 

Para executar as migracoes pendentes:
php artisan migrate 
OBS:o arquivo .env deve estar configurado com o nome do bando, usuário e senha

Para desfazer a última migrate (que pode ter executado varias migrations simultaneamente)
php artisan migrate:rollback 

Para desfazer todas as migrations
php artisan migrate: fresh
OBS: não chamará o down(), mas sim dar um 
DROP TABLE em todas as tabelas

Para desfazer e refazer todas as migrates
php artisan migrate:refresh 
OBS: o método down() das migrations será chamado, para desfazer
depois o método up() das mesmas, para refazer.

Para visualizar as migrations:
php artisan migrate:status

---------- FIM MIGRATIONS ------------------

---------- MODEL ---------------
Para criar um model 
php artisan make:model NomeDoModel
-> cria arquivo .php dentro de app\models




